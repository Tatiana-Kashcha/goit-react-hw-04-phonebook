{"version":3,"file":"static/js/602.b8c74843.chunk.js","mappings":"kRAIaA,EAAUC,EAAAA,GAAAA,QAAH,mMAGMC,GAMbC,EAAYF,EAAAA,GAAAA,IAAH,qIAQTG,GAAaH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,oYAkBVK,EAAeL,EAAAA,GAAAA,GAAH,kH,SCrCZM,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACzB,UAAC,EAAD,YACE,SAAC,EAAD,WACE,UAAC,EAAD,CAAcC,GAAG,IAAjB,UAAsB,KAAK,aAG5BF,IAAS,SAAC,EAAD,UAAiBA,IAC1BC,IAPsB,C,yICAdN,EAAYF,EAAAA,GAAAA,IAAH,qIAQTU,EAAOV,EAAAA,GAAAA,KAAH,4yBA4BJW,EAAQX,EAAAA,GAAAA,MAAH,6YAmBLY,EAAMZ,EAAAA,GAAAA,IAAH,8F,SClDHa,EAAe,WAC1B,IAAMC,GAAOC,EAAAA,EAAAA,MAEPC,EAAY,mCAAG,WAAMC,GAAN,8EACnBA,EAAEC,iBACIC,EAAOF,EAAEG,cAFI,mBAKXC,EAAAA,EAAAA,IACJP,EACAK,EAAKG,SAASC,MAAMC,MACpBL,EAAKG,SAASG,SAASD,OARR,wBAUXE,EAAAA,EAAAA,IAAcZ,EAAKa,YAAa,CACpCC,YAAaT,EAAKG,SAASO,KAAKL,QAXjB,uDAcjBM,QAAQC,IAAR,MAdiB,QAiBnBZ,EAAKa,QAjBc,yDAAH,sDAoBlB,OACE,SAAC,EAAD,WACE,UAAC,EAAD,CAAQC,SAAUjB,EAAckB,aAAa,MAA7C,WACE,UAAC,EAAD,WAAS,YAEP,kBAAOC,KAAK,OAAON,KAAK,OAAOO,UAAQ,QAEzC,UAAC,EAAD,WAAS,SAEP,kBAAOD,KAAK,QAAQN,KAAK,QAAQO,UAAQ,QAE3C,UAAC,EAAD,WAAS,YAEP,kBAAOD,KAAK,WAAWN,KAAK,WAAWO,UAAQ,QAEjD,SAAC,EAAD,WACE,mBAAQD,KAAK,SAAb,SAAsB,mBAK/B,E,UCxCD,EARqB,WACnB,OACE,SAAC7B,EAAA,EAAD,CAAaC,MAAM,kBAAnB,UACE,SAACM,EAAD,KAGL,C","sources":["components/SectionAuth/SectionAuth.styled.js","components/SectionAuth/SectionAuth.jsx","components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport backgroundImg from '../../images/backgroundImg.jpg';\n\nexport const Section = styled.section`\n  padding-top: 220px;\n  padding-bottom: 440px;\n  background-image: url(${backgroundImg});\n  background-position: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n`;\n\nexport const Container = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 700px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n  padding: 10px 0;\n  font-size: 18px;\n  color: rgb(207 87 30);\n  font-weight: bold;\n  border: 1px solid rgb(207 87 30);\n  border-radius: 4px;\n  min-width: 100px;\n  text-align: center;\n  cursor: pointer;\n  background-color: rgb(242 228 178);\n  &:hover {\n    background-color: rgb(207 87 30);\n    color: rgb(242 228 178);\n  }\n`;\n\nexport const SectionTitle = styled.h2`\n  font-size: 32px;\n  font-weight: 600;\n  text-align: center;\n  color: rgb(12 80 206);\n`;\n","import * as s from './SectionAuth.styled';\n\nexport const SectionAuth = ({ title, children }) => (\n  <s.Section>\n    <s.Container>\n      <s.StyledLink to=\"/\">{'<<'} HOME</s.StyledLink>\n    </s.Container>\n\n    {title && <s.SectionTitle>{title}</s.SectionTitle>}\n    {children}\n  </s.Section>\n);\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 700px;\n`;\n\nexport const Form = styled.form`\n  padding: 10px;\n  margin-top: 20px;\n  /* border: 2px solid rgb(12 80 206); */\n  border-radius: 4px;\n  background-color: #ffffff;\n  -webkit-box-shadow: 23px 20px 39px 17px rgba(12, 80, 206, 0.64);\n  -moz-box-shadow: 23px 20px 39px 17px rgba(12, 80, 206, 0.64);\n  box-shadow: 23px 20px 39px 17px rgba(12, 80, 206, 0.64);\n  button {\n    padding: 10px 0;\n    font-size: 18px;\n    color: rgb(12 80 206);\n    font-weight: bold;\n    border: 1px solid rgb(12 80 206);\n    border-radius: 4px;\n    min-width: 100px;\n    cursor: pointer;\n    background-color: white;\n    box-shadow: rgba(0, 0, 0, 0.12) 0px 0px 1px, rgba(0, 0, 0, 0.14) 0px 0px 1px,\n      rgba(0, 0, 0, 0.2) 0px 1px 0px;\n    &:hover {\n      background-color: rgb(12 80 206);\n      color: #ffffff;\n    }\n  }\n`;\n\nexport const Label = styled.label`\n  font-size: 20px;\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  input {\n    max-width: 100%;\n    padding: 4px;\n    margin-top: 6px;\n    border: 1px solid rgb(12 80 206);\n    border-radius: 4px;\n    &:focus {\n      border-color: rgb(99, 149, 241, 0.6);\n      outline: 2px rgba(99, 149, 241, 0.6);\n      outline-style: solid;\n    }\n  }\n`;\n\nexport const Div = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import {\n  getAuth,\n  createUserWithEmailAndPassword,\n  updateProfile,\n} from 'firebase/auth';\nimport * as s from './RegisterForm.styled';\n\nexport const RegisterForm = () => {\n  const auth = getAuth();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    try {\n      await createUserWithEmailAndPassword(\n        auth,\n        form.elements.email.value,\n        form.elements.password.value\n      );\n      await updateProfile(auth.currentUser, {\n        displayName: form.elements.name.value,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    form.reset();\n  };\n\n  return (\n    <s.Container>\n      <s.Form onSubmit={handleSubmit} autoComplete=\"off\">\n        <s.Label>\n          Username\n          <input type=\"text\" name=\"name\" required />\n        </s.Label>\n        <s.Label>\n          Email\n          <input type=\"email\" name=\"email\" required />\n        </s.Label>\n        <s.Label>\n          Password\n          <input type=\"password\" name=\"password\" required />\n        </s.Label>\n        <s.Div>\n          <button type=\"submit\">Register</button>\n        </s.Div>\n      </s.Form>\n    </s.Container>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { SectionAuth } from 'components/SectionAuth/SectionAuth';\n\nconst RegisterPage = () => {\n  return (\n    <SectionAuth title=\"Please register\">\n      <RegisterForm />\n    </SectionAuth>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["Section","styled","backgroundImg","Container","StyledLink","NavLink","SectionTitle","SectionAuth","title","children","to","Form","Label","Div","RegisterForm","auth","getAuth","handleSubmit","e","preventDefault","form","currentTarget","createUserWithEmailAndPassword","elements","email","value","password","updateProfile","currentUser","displayName","name","console","log","reset","onSubmit","autoComplete","type","required"],"sourceRoot":""}